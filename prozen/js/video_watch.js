start();

function start() {
    getOption(OPTIONS.prozen).then(enabled => {
        if (enabled) {
            if (!document.getElementById("prozen-css")) {
                const css = document.createElement("link");
                css.setAttribute("rel", "stylesheet");
                css.setAttribute("type", "text/css");
                css.id = "prozen-css";
                css.setAttribute("href", chrome.runtime.getURL("css/prozen.css"));
                document.head.appendChild(css);
            }
            setTimeout(showStatsVideo, 1000);

        }
    });
}


async function showStatsVideo() {

    const zenIds = getZenObject();
    const videoId = zenIds.publicationId;

    const videoData = await loadPublicationStat(videoId);

    const sumViewTimeSec = videoData.sumViewTimeSec;
    const views = videoData.views;
    const viewsTillEnd = videoData.viewsTillEnd;

    const statsDiv = document.querySelector("div.card-channel-info__description");

    const spanCreateTime = createElement("span");
    spanCreateTime.innerText = statsDiv.innerText;
    statsDiv.innerText = "";
    statsDiv.appendChild(spanCreateTime);

    const spanViews = createElement("span");
    spanViews.innerText = `¬†¬†‚Ä¢ üì∫ ${views.toLocaleString("ru-RU", {maximumFractionDigits: 0})}`;
    spanViews.setAttribute("title", "–ü—Ä–æ—Å–º–æ—Ç—Ä—ã");
    statsDiv.appendChild(spanViews);

    if (sumViewTimeSec > 0) {
        const spanTime = createElement("span");
        spanTime.innerText = `¬†¬†‚Ä¢ ‚åö ${secToText(infiniteAndNan(sumViewTimeSec / viewsTillEnd))}`;
        spanTime.setAttribute("title", "–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞");
        statsDiv.appendChild(spanTime);
    }

    if (checkNoIndex()) {
        const spanSadRobot = createElement("span");
        spanSadRobot.innerText = " ‚Ä¢ ü§ñ";
        spanSadRobot.setAttribute("title", "–û–±–Ω–∞—Ä—É–∂–µ–Ω –º–µ—Ç–∞-—Ç–µ–≥ <meta name=\"robots\" content=\"noindex\" />\n" +
            "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–µ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç—Å—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–∞–º–∏.\n" +
            "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Å–≤—è–∑—å —ç—Ç–æ–≥–æ —Ç–µ–≥–∞ —Å –ø–æ–∫–∞–∑–∞–º–∏,\n" +
            "–ø–µ—Å—Å–∏–º–∏–∑–∞—Ü–∏–µ–π –∏ –∏–Ω—ã–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –∫–∞–Ω–∞–ª–∞\n" +
            "–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.");
        statsDiv.appendChild(spanSadRobot);
    }
}