package studio

import kotlinx.datetime.Instant
import common.Requester

class Informer (val requester: Requester) {

    suspend fun getData(): InformerData? {
        val strikes = requester.getStrikesInfo()?.second



        return null
    }




}

/*
–ü–†–û–î–ó–ï–ù-–∏–Ω—Ñ–æ
–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: 0
–ö–∞–Ω–∞–ª –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω
–ö–∞–Ω–∞–ª –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç—Å—è
–û—Ö–≤–∞—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (SCR): 11,6%
–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ —á–∏—Ç–∞—Ç–µ–ª–µ–π: 12
–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç 05.09.24 06:00
–ö—É—Ä—Å –º–∏–Ω—É—Ç—ã 03.09.24: ‚ÜìÔ∏è0.055‚ÇΩ
üîó –ü–æ–¥–ø–∏—Å–∫–∞ –≤ ZenReader
 */

data class InformerData (
    val strikes: Int?,
    val channelLimited: Boolean?,
    val channelIndexed: Boolean?,
    val scr: Double?,
    val blockedReaders: Int?,
    val statsTime: Instant?,
    val minuteCourse: Double?,
    val zenReaderUrl: String?
)